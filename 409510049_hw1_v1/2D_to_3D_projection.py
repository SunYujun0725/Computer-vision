import numpy as np

def calculate_projection_matrix(corresponding_points_2d, corresponding_points_3d):

    # Ensure that both 2D data and 3D data have the same number of points
    assert len(corresponding_points_2d) == len(corresponding_points_3d)
    num_points = len(corresponding_points_2d) #num_points=298
    A = np.zeros((2 * num_points, 12))

    for i in range(num_points):
        X, Y, Z = corresponding_points_3d[i]
        x, y = corresponding_points_2d[i]
        A[2 * i] = [X, Y, Z, 1, 0, 0, 0, 0, -x * X, -x * Y, -x * Z, -x]
        A[2 * i + 1] = [0, 0, 0, 0, X, Y, Z, 1, -y * X, -y * Y, -y * Z, -y]
        
    # Calculate A^T * A
    ATA = np.dot(A.T, A)
    # Calculate all eigenvalue and eigenvector
    eigenvalues, eigenvectors = np.linalg.eig(ATA)

    # find the smallest eigenvalue and corresponding eigenvector
    # find the index of smallest eigenvalue
    min_eigenvalue_index = np.argmin(eigenvalues)
    min_eigenvalue = eigenvalues[min_eigenvalue_index]
    P = eigenvectors[:, min_eigenvalue_index]
    # 將P重塑為3x4投影矩陣
    projection_matrix = P.reshape((3, 4))

    return projection_matrix


def factorize_projection_matrix(P):

    # 使用QR分解分解M^-1矩陣
    q, r = np.linalg.qr(np.linalg.inv(P[:, :3]))
    K = np.linalg.inv(r)
    R = np.linalg.inv(q)
    T = np.dot(np.linalg.inv(K), P[:, 3]) 

    return K, R, T

def calculate_average_projection_error(P, corresponding_points_3d, ground_truth_2d):

    num_points = len(corresponding_points_3d)
    errors = []
    for i in range(num_points):
        X, Y, Z = corresponding_points_3d[i]
        x = (P[0, 0] * X + P[0, 1] * Y + P[0, 2] * Z + P[0, 3]) / (P[2, 0] * X + P[2, 1] * Y + P[2, 2] * Z + P[2, 3])
        y = (P[1, 0] * X + P[1, 1] * Y + P[1, 2] * Z + P[1, 3]) / (P[2, 0] * X + P[2, 1] * Y + P[2, 2] * Z + P[2, 3])

        xgt, ygt = ground_truth_2d[i]
        error = np.sqrt((x - xgt) ** 2 + (y - ygt) ** 2)
        errors.append(error)

    average_error = np.mean(errors)
    return average_error

# 2D and 3D data
corresponding_points_2d = np.array([
    [554.369, 163.897],[520.323, 176.470],[223.503, 178.626],[539.106, 253.656],[562.979, 303.278],
    [558.897, 309.487],[605.067, 351.343],[516.435, 167.624],[594.044, 236.724],[545.960, 253.500],
    [499.797, 255.359],[498.519, 271.955],[559.816, 298.498],[527.842, 301.539],[340.509, 344.908],
    [222.583, 347.020],[258.944, 369.477],[452.995, 371.254],[272.860, 513.071],[566.437, 126.101],
    [397.421, 151.064],[558.371, 170.999],[272.644, 191.097],[504.748, 199.027],[431.022, 215.685],
    [418.886, 217.739],[432.030, 219.926],[275.598, 228.026],[399.811, 227.902],[550.094, 232.230],
    [278.271, 233.080],[527.061, 238.432],[516.353, 240.944],[495.216, 246.068],[507.809, 248.087],
    [543.256, 247.100],[524.625, 250.908],[495.641, 252.181],[556.045, 252.201],[595.109, 254.078],
    [476.207, 258.978],[512.122, 260.304],[591.976, 262.966],[473.397, 264.076],[488.073, 265.995],
    [508.213, 267.173],[559.039, 268.740],[499.125, 268.801],[453.699, 270.821],[493.227, 270.901],
    [409.107, 275.189],[455.203, 275.473],[590.491, 277.524],[403.004, 279.953],[611.191, 283.000],
    [586.767, 283.551],[589.378, 291.608],[278.236, 293.673],[582.851, 293.808],[475.071, 303.086],
    [406.567, 306.098],[463.731, 306.329],[281.432, 314.966],[595.629, 316.679],[479.542, 317.811],
    [270.966, 318.773],[402.313, 318.885],[555.947, 322.307],[463.333, 322.805],[478.711, 327.013],
    [514.886, 327.748],[473.643, 329.291],[430.249, 336.058],[513.867, 341.379],[525.858, 340.904],
    [495.458, 348.933],[213.850, 350.007],[297.908, 354.890],[402.341, 355.499],[485.484, 356.698],
    [432.941, 359.562],[230.329, 368.670],[370.119, 373.635],[444.052, 373.672],[616.341, 375.976],
    [189.334, 381.383],[409.919, 380.705],[300.385, 387.401],[386.424, 388.799],[376.998, 391.971],
    [521.521, 394.604],[323.166, 412.030],[301.340, 418.757],[221.892, 444.079],[198.452, 450.737],
    [394.430, 154.209],[413.251, 168.130],[406.158, 168.961],[588.229, 191.014],[511.361, 197.788],
    [437.291, 220.108],[426.923, 220.469],[605.651, 225.214],[283.030, 229.838],[601.205, 231.155],
    [593.174, 240.920],[604.243, 248.788],[472.042, 251.304],[445.508, 258.145],[493.158, 258.051],
    [459.097, 260.362],[459.986, 264.851],[466.881, 266.160],[449.740, 267.906],[593.738, 267.897],
    [477.662, 268.967],[517.381, 270.996],[412.783, 271.838],[450.263, 282.242],[592.454, 282.277],
    [441.817, 288.415],[451.804, 292.899],[586.338, 292.823],[560.201, 293.927],[372.936, 298.322],
    [425.132, 299.377],[144.636, 300.475],[140.011, 300.814],[480.010, 301.519],[318.077, 303.093],
    [471.686, 303.493],[312.022, 304.003],[358.014, 303.825],[607.512, 303.926],[456.568, 311.047],
    [512.168, 313.287],[474.226, 313.674],[312.381, 314.678],[586.919, 315.918],[470.844, 319.860],
    [452.070, 321.413],[274.130, 321.923],[308.361, 321.858],[389.634, 322.961],[448.754, 323.086],
    [510.982, 326.180],[289.023, 327.980],[449.736, 329.936],[303.323, 330.686],[253.653, 336.122],
    [439.651, 339.146],[296.708, 339.645],[443.864, 339.631],[698.021, 341.607],[389.901, 343.917],
    [448.829, 345.341],[309.077, 350.995],[428.508, 352.097],[481.187, 358.156],[200.756, 360.725],
    [206.810, 363.760],[298.816, 367.764],[315.807, 368.983],[310.424, 369.986],[307.063, 370.728],
    [592.624, 372.803],[213.409, 374.524],[237.242, 381.029],[316.255, 381.803],[311.103, 384.191],
    [260.009, 386.855],[347.396, 391.000],[264.367, 414.756],[273.549, 418.829],[286.761, 423.046],
    [255.073, 424.440],[447.396, 427.586],[256.829, 430.928],[657.708, 458.822],[251.586, 494.888],
    [108.932, 529.806],[421.907, 529.506],[568.280, 78.036],[568.694, 123.108],[584.336, 138.339],
    [400.932, 150.637],[363.247, 153.491],[549.002, 165.490],[539.845, 166.437],[540.917, 172.858],
    [523.912, 174.809],[276.245, 190.770],[614.460, 221.649],[416.990, 223.868],[575.472, 245.148],
    [456.202, 255.348],[499.347, 260.254],[532.337, 263.612],[432.158, 264.892],[594.341, 264.954],
    [587.940, 268.896],[392.231, 271.263],[545.856, 275.719],[540.627, 279.112],[532.127, 280.043],
    [429.232, 280.986],[489.420, 281.224],[411.121, 282.298],[363.387, 283.099],[327.703, 284.703],
    [594.569, 293.715],[361.720, 298.811],[376.633, 299.904],[329.514, 301.742],[199.410, 305.327],
    [193.175, 306.245],[607.227, 310.234],[453.120, 310.717],[300.077, 312.083],[542.560, 313.532],
    [328.742, 314.970],[435.379, 316.615],[463.398, 316.481],[297.890, 319.099],[501.637, 318.435],
    [280.032, 320.418],[447.978, 319.933],[462.749, 319.595],[553.937, 320.737],[508.394, 322.364],
    [284.034, 322.838],[298.061, 323.958],[275.920, 326.170],[285.510, 325.630],[265.936, 332.072],
    [402.214, 334.301],[374.969, 334.952],[308.727, 336.115],[386.904, 338.820],[279.987, 339.563],
    [277.038, 342.325],[246.663, 343.819],[430.640, 344.315],[634.233, 345.174],[314.928, 349.713],
    [305.972, 351.758],[513.323, 352.018],[340.722, 355.107],[446.548, 358.103],[375.844, 358.848],
    [167.233, 360.982],[251.312, 360.986],[192.289, 363.665],[309.854, 364.537],[303.708, 366.028],
    [339.523, 365.785],[576.864, 367.716],[556.270, 368.966],[59.547, 372.902],[168.387, 373.684],
    [346.580, 379.093],[15.856, 382.506],[39.601, 381.344],[366.035, 384.891],[250.167, 389.162],
    [521.806, 391.362],[231.290, 391.795],[15.445, 394.461],[368.815, 393.420],[229.695, 395.221],
    [249.948, 394.665],[645.039, 396.298],[475.312, 400.395],[179.861, 403.126],[511.877, 405.186],
    [636.804, 405.342],[175.003, 414.103],[250.920, 417.772],[288.355, 419.520],[176.823, 421.802],
    [416.271, 423.069],[291.640, 424.321],[26.028, 427.647],[655.200, 430.645],[735.251, 431.219],
    [178.713, 433.214],[185.003, 452.987],[649.838, 459.461],[695.760, 474.955],[304.646, 480.672],
    [439.107, 483.887],[665.089, 489.945],[644.653, 494.798],[225.451, 500.528],[195.490, 503.088],
    [187.097, 506.298],[299.097, 531.645],[113.320, 543.688]
])

corresponding_points_3d = np.array([
    [1.489, 1.094, -5.896],[1.139, 0.936, -5.628],[-1.094, 0.738, -4.531],[1.264, 0.278, -5.472],
    [1.552, -0.132, -5.848],[1.512, -0.187, -5.847],[1.852, -0.533, -5.658],[1.110, 1.016, -5.653],
    [1.821, 0.448, -5.816],[1.332, 0.279, -5.514],[0.901, 0.250, -5.211],[0.895, 0.125, -5.263],
    [1.517, -0.089, -5.805],[1.216, -0.107, -5.649],[-0.302, -0.387, -4.643],[-0.996, -0.373, -4.179],
    [-0.808, -0.534, -4.362],[0.542, -0.661, -5.336],[-0.622, -1.280, -3.864],[1.708, 1.516, -6.250],
    [0.093, 1.072, -5.243],[1.518, 1.024, -5.861],[-0.784, 0.669, -4.643],[0.973, 0.716, -5.414],
    [0.350, 0.538, -5.026],[0.257, 0.520, -4.973],[0.355, 0.507, -5.009],[-0.731, 0.401, -4.491],
    [0.107, 0.437, -4.877],[1.348, 0.450, -5.449],[-0.710, 0.369, -4.485],[1.137, 0.393, -5.330],
    [1.038, 0.368, -5.262],[0.855, 0.321, -5.152],[0.969, 0.308, -5.234],[1.294, 0.322, -5.457],
    [1.128, 0.284, -5.366],[0.861, 0.271, -5.163],[1.414, 0.302, -5.684],[1.888, 0.309, -6.014],
    [0.696, 0.213, -5.071],[1.015, 0.220, -5.311],[1.838, 0.218, -5.974],[0.678, 0.178, -5.075],
    [0.803, 0.168, -5.171],[0.982, 0.161, -5.305],[1.471, 0.159, -5.662],[0.901, 0.151, -5.254],
    [0.519, 0.130, -4.981],[0.847, 0.131, -5.221],[0.182, 0.088, -4.770],[0.535, 0.090, -5.017],
    [1.842, 0.090, -6.033],[0.135, 0.054, -4.753],[2.076, 0.049, -6.173],[1.817, 0.042, -6.054],
    [1.846, -0.036, -6.091],[-0.661, -0.043, -4.207],[1.756, -0.058, -6.008],[0.709, -0.120, -5.289],
    [0.162, -0.133, -4.846],[0.609, -0.144, -5.223],[-0.656, -0.178, -4.324],[1.933, -0.263, -6.175],
    [0.768, -0.236, -5.393],[-0.721, -0.198, -4.297],[0.123, -0.229, -4.923],[1.497, -0.297, -5.879],
    [0.612, -0.275, -5.281],[0.769, -0.317, -5.432],[1.082, -0.329, -5.595],[0.709, -0.333, -5.389],
    [0.340, -0.366, -5.060],[1.084, -0.449, -5.645],[1.191, -0.459, -5.742],[0.906, -0.503, -5.526],
    [-1.048, -0.385, -4.160],[-0.591, -0.450, -4.547],[0.124, -0.510, -5.049],[0.824, -0.562, -5.498],
    [0.372, -0.544, -5.167],[-0.971, -0.511, -4.255],[-0.102, -0.619, -4.862],[0.466, -0.671, -5.273],
    [1.820, -0.686, -5.271],[-1.201, -0.582, -4.168],[0.202, -0.705, -5.116],[-0.588, -0.690, -4.648],
    [0.008, -0.757, -5.035],[-0.051, -0.768, -4.951],[1.025, -0.788, -4.976],[-0.422, -0.871, -4.740],
    [-0.579, -0.914, -4.696],[-1.043, -1.012, -4.382],[-1.194, -1.049, -4.347],[0.070, 1.049, -5.226],
    [0.221, 0.940, -5.244],[0.163, 0.928, -5.203],[1.782, 0.849, -5.863],[1.033, 0.734, -5.455],
    [0.396, 0.510, -5.024],[0.306, 0.490, -4.944],[1.929, 0.541, -5.850],[-0.677, 0.389, -4.493],
    [1.890, 0.496, -5.842],[1.818, 0.413, -5.844],[1.945, 0.346, -5.944],[0.660, 0.272, -5.022],
    [0.453, 0.217, -4.913],[0.843, 0.227, -5.181],[0.559, 0.205, -4.985],[0.566, 0.169, -5.000],
    [0.621, 0.161, -5.041],[0.490, 0.144, -4.967],[1.890, 0.186, -6.077],[0.714, 0.148, -5.120],
    [1.065, 0.135, -5.373],[0.207, 0.114, -4.775],[0.493, 0.043, -4.998],[1.897, 0.056, -6.139],
    [0.428, -0.006, -4.975],[0.507, -0.040, -5.039],[1.823, -0.045, -6.087],[1.516, -0.050, -5.804],
    [-0.076, -0.075, -4.664],[0.301, -0.082, -4.909],[-1.686, -0.085, -4.686],[-1.714, -0.091, -4.673],
    [0.763, -0.110, -5.358],[-0.433, -0.103, -4.436],[0.685, -0.124, -5.282],[-0.471, -0.109, -4.413],
    [-0.175, -0.110, -4.608],[2.063, -0.147, -6.233],[0.554, -0.183, -5.137],[1.047, -0.209, -5.512],
    [0.710, -0.206, -5.325],[-0.472, -0.180, -4.444],[1.828, -0.257, -6.097],[0.686, -0.254, -5.343],
    [0.518, -0.256, -5.133],[-0.703, -0.223, -4.318],[-0.498, -0.225, -4.437],[0.041, -0.252, -4.887],
    [0.492, -0.269, -5.131],[1.041, -0.315, -5.493],[-0.616, -0.263, -4.388],[0.503, -0.325, -5.164],
    [-0.533, -0.285, -4.445],[-0.826, -0.309, -4.276],[0.420, -0.386, -5.119],[-0.575, -0.343, -4.440],
    [0.456, -0.399, -5.165],[2.723, -0.463, -5.840],[0.043, -0.410, -4.952],[0.499, -0.449, -5.223],
    [-0.512, -0.431, -4.583],[0.336, -0.492, -5.114],[0.782, -0.572, -5.468],[-1.121, -0.448, -4.132],
    [-1.094, -0.471, -4.170],[-0.583, -0.544, -4.573],[-0.470, -0.561, -4.658],[-0.510, -0.569, -4.639],
    [-0.530, -0.571, -4.629],[1.662, -0.677, -5.351],[-1.061, -0.546, -4.211],[-0.936, -0.596, -4.308],
    [-0.473, -0.658, -4.705],[-0.509, -0.669, -4.680],[-0.807, -0.649, -4.400],[-0.263, -0.737, -4.799],
    [-0.795, -0.844, -4.481],[-0.743, -0.881, -4.533],[-0.661, -0.923, -4.594],[-0.854, -0.907, -4.473],
    [0.448, -0.971, -4.660],[-0.844, -0.952, -4.480],[1.723, -1.062, -4.179],[-0.783, -1.287, -4.188],
    [-1.486, -1.319, -3.693],[0.239, -1.319, -3.714],[1.695, 1.941, -6.176],[1.739, 1.571, -6.358],
    [1.866, 1.403, -6.270],[0.121, 1.082, -5.265],[-0.187, 1.093, -5.389],[1.425, 1.064, -5.811],
    [1.333, 1.045, -5.758],[1.334, 0.982, -5.717],[1.271, 1.053, -6.189],[-0.766, 0.679, -4.685],
    [2.029, 0.582, -5.910],[0.241, 0.471, -4.935],[1.626, 0.362, -5.704],[0.535, 0.239, -4.959],
    [0.902, 0.217, -5.251],[1.199, 0.193, -5.438],[0.348, 0.164, -4.838],[1.894, 0.209, -6.075],
    [1.815, 0.170, -6.003],[0.059, 0.116, -4.682],[1.359, 0.109, -5.662],[1.302, 0.071, -5.604],
    [1.234, 0.069, -5.622],[0.330, 0.050, -4.887],[0.823, 0.054, -5.262],[0.193, 0.041, -4.824],
    [-0.138, 0.030, -4.577],[-0.369, 0.018, -4.432],[1.940, -0.056, -6.220],[-0.152, -0.077, -4.613],
    [-0.049, -0.085, -4.668],[-0.360, -0.093, -4.465],[-1.254, -0.117, -4.533],[-1.295, -0.124, -4.530],
    [2.081, -0.213, -6.306],[0.524, -0.174, -5.108],[-0.545, -0.159, -4.385],[1.363, -0.223, -5.818],
    [-0.368, -0.180, -4.500],[0.384, -0.215, -5.036],[0.614, -0.228, -5.233],[-0.560, -0.206, -4.396],
    [0.951, -0.251, -5.467],[-0.665, -0.212, -4.325],[0.485, -0.244, -5.130],[0.611, -0.252, -5.253],
    [1.463, -0.286, -5.822],[1.017, -0.284, -5.529],[-0.643, -0.228, -4.343],[-0.560, -0.239, -4.405],
    [-0.692, -0.249, -4.322],[-0.634, -0.245, -4.345],[-0.752, -0.284, -4.299],[0.132, -0.344, -4.939],
    [-0.064, -0.334, -4.765],[-0.498, -0.323, -4.474],[0.019, -0.372, -4.868],[-0.673, -0.337, -4.366],
    [-0.691, -0.354, -4.364],[-0.866, -0.356, -4.257],[0.353, -0.434, -5.122],[2.106, -0.479, -5.654],
    [-0.473, -0.423, -4.620],[-0.530, -0.434, -4.570],[1.083, -0.541, -5.678],[-0.300, -0.468, -4.669],
    [0.483, -0.548, -5.253],[-0.059, -0.512, -4.848],[-1.298, -0.441, -4.042],[-0.846, -0.470, -4.302],
    [-1.167, -0.464, -4.110],[-0.508, -0.526, -4.613],[-0.549, -0.535, -4.602],[-0.310, -0.542, -4.687],
    [1.556, -0.644, -5.427],[1.357, -0.640, -5.291],[-2.677, -0.693, -5.486],[-1.296, -0.519, -4.062],
    [-0.265, -0.648, -4.759],[-2.989, -0.765, -5.400],[-2.776, -0.747, -5.362],[-0.131, -0.704, -4.870],
    [-0.864, -0.658, -4.364],[1.043, -0.782, -5.089],[-0.971, -0.662, -4.296],[-2.948, -0.840, -5.325],
    [-0.112, -0.768, -4.899],[-0.978, -0.682, -4.286],[-0.865, -0.695, -4.366],[1.935, -0.799, -4.961],
    [0.679, -0.834, -4.993],[-1.248, -0.705, -4.135],[0.936, -0.851, -4.887],[1.825, -0.847, -4.817],
    [-1.281, -0.779, -4.151],[-0.869, -0.851, -4.417],[-0.650, -0.896, -4.588],[-1.274, -0.827, -4.163],
    [0.229, -0.942, -4.699],[-0.630, -0.932, -4.607],[-2.599, -1.011, -4.856],[1.835, -0.959, -4.504],
    [2.326, -0.942, -4.409],[-1.276, -0.906, -4.206],[-1.248, -1.041, -4.251],[1.688, -1.074, -4.213],
    [1.912, -1.132, -4.069],[-0.471, -1.184, -4.154],[0.352, -1.177, -4.064],[1.667, -1.177, -3.920],
    [1.530, -1.187, -3.877],[-0.908, -1.237, -3.933],[-1.091, -1.256, -3.958],[-1.127, -1.263, -3.917],
    [-0.433, -1.310, -3.644],[-1.420, -1.358, -3.599]
])

def main():

    print("Projection Matrix (P):")
    projection_matrix = calculate_projection_matrix(corresponding_points_2d, corresponding_points_3d)
    print(projection_matrix)

    # Factorize P into K, R, and T
    K, R, T = factorize_projection_matrix(projection_matrix)
    print("Calibration Matrix (K):")
    print(K)
    print("Rotation Matrix (R):")
    print(R)
    print("Translation Matrix (T):")
    print(T)

    '''
    print("驗證答案 P = M[R|T]")
    RT = np.column_stack((R, T))
    P_check = np.dot(K, RT)
    print(P_check)
    '''

    # Use projection matrix to project 3D points to 2D
    gt_2d_points = corresponding_points_2d
    # Calculate average projection error
    average_error = calculate_average_projection_error(projection_matrix, corresponding_points_3d, gt_2d_points)
    print("Average Projection Error:", average_error)


if __name__ == '__main__':
    main()


# Experience another method
def calculate_projection_matrix_SVD(corresponding_points_2d, corresponding_points_3d):
    # 確保特徵對應的數量相同
    assert len(corresponding_points_2d) == len(corresponding_points_3d)
    num_points = len(corresponding_points_2d)

    # 初始化 A 矩陣
    A = np.zeros((2 * num_points, 12))

    for i in range(num_points):
        X, Y, Z = corresponding_points_3d[i]
        x, y = corresponding_points_2d[i]
        A[2 * i] = [X, Y, Z, 1, 0, 0, 0, 0, -x * X, -x * Y, -x * Z, -x]
        A[2 * i + 1] = [0, 0, 0, 0, X, Y, Z, 1, -y * X, -y * Y, -y * Z, -y]

    # 使用奇異值分解 (SVD) 來求解 A 的最小二乘解
    _, _, Vt = np.linalg.svd(A)
    P = Vt[-1].reshape(3, 4)  # 取 Vt 的最後一列並重塑為 3x4 投影矩陣

    return P